// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		4D1CAFBD2752441500A4D6FC /* 242. 有效的字母异位词.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D1CAFBC2752441500A4D6FC /* 242. 有效的字母异位词.swift */; };
		4D1CAFBF2753365B00A4D6FC /* 268. 丢失的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D1CAFBE2753365B00A4D6FC /* 268. 丢失的数字.swift */; };
		4D1CAFC12753374300A4D6FC /* MergeSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D1CAFC02753374300A4D6FC /* MergeSort.swift */; };
		4D27A29226B2661800BFA6B7 /* 27. 移除元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D27A29126B2661800BFA6B7 /* 27. 移除元素.swift */; };
		4D27A29526B27D8600BFA6B7 /* 35. 搜索插入位置.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D27A29426B27D8600BFA6B7 /* 35. 搜索插入位置.swift */; };
		4D27A29826B2B94600BFA6B7 /* 58. 最后一个单词的长度.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D27A29726B2B94600BFA6B7 /* 58. 最后一个单词的长度.swift */; };
		4D27A29A26B4476700BFA6B7 /* 67. 二进制求和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D27A29926B4476700BFA6B7 /* 67. 二进制求和.swift */; };
		4D5CAE55274FB87D00C4391B /* 1.两数之和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D5CAE54274FB87D00C4391B /* 1.两数之和.swift */; };
		4D60658D266FBFD8005E3124 /* 1688. 比赛中的配对次数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D60658C266FBFD8005E3124 /* 1688. 比赛中的配对次数.swift */; };
		4D60658F266FC559005E3124 /* (未完)1863. 找出所有子集的异或总和再求和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D60658E266FC559005E3124 /* (未完)1863. 找出所有子集的异或总和再求和.swift */; };
		4D6065912675D639005E3124 /* (未完)17. 电话号码的字母组合.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D6065902675D639005E3124 /* (未完)17. 电话号码的字母组合.swift */; };
		4D66674E275374CB00E4C576 /* 349. 两个数组的交集.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D66674D275374CB00E4C576 /* 349. 两个数组的交集.swift */; };
		4D6667502753935400E4C576 /* 350. 两个数组的交集 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D66674F2753935400E4C576 /* 350. 两个数组的交集 II.swift */; };
		4D6667522753952700E4C576 /* 389. 找不同.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D6667512753952700E4C576 /* 389. 找不同.swift */; };
		4D66675427539C3F00E4C576 /* 414. 第三大的数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D66675327539C3F00E4C576 /* 414. 第三大的数.swift */; };
		4D768FA0263932B70016ABFF /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D768F9F263932B70016ABFF /* main.swift */; };
		4D768FA226393AFE0016ABFF /* 1143最长公共子序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D768FA126393AFE0016ABFF /* 1143最长公共子序列.swift */; };
		4D768FA42639A9CD0016ABFF /* 5. 最长回文子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D768FA32639A9CD0016ABFF /* 5. 最长回文子串.swift */; };
		4D785B5926D5502100D66120 /* Turn.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D785B5826D5502100D66120 /* Turn.swift */; };
		4D80FE2F2751ED4000A0F62B /* 剑指 Offer 25. 合并两个排序的链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D80FE2E2751ED4000A0F62B /* 剑指 Offer 25. 合并两个排序的链表.swift */; };
		4D80FE312751EFBF00A0F62B /* 剑指 Offer 06. 从尾到头打印链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D80FE302751EFBF00A0F62B /* 剑指 Offer 06. 从尾到头打印链表.swift */; };
		4D80FE352751F9D900A0F62B /* 剑指 Offer 24. 反转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D80FE342751F9D900A0F62B /* 剑指 Offer 24. 反转链表.swift */; };
		4D80FE372751FB2600A0F62B /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D80FE362751FB2600A0F62B /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift */; };
		4D94E04226CA7AA300FFA835 /* 347. 前 K 个高频元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D94E04126CA7AA300FFA835 /* 347. 前 K 个高频元素.swift */; };
		4D94E04726CA9E8E00FFA835 /* Stack.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D94E04626CA9E8E00FFA835 /* Stack.swift */; };
		4D94E04926CAA86700FFA835 /* 121. 买卖股票的最佳时机.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D94E04826CAA86700FFA835 /* 121. 买卖股票的最佳时机.swift */; };
		4D94E04B26CABACE00FFA835 /* 70. 爬楼梯 .swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D94E04A26CABACE00FFA835 /* 70. 爬楼梯 .swift */; };
		4D94E04D26CB5DCF00FFA835 /* QuickSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D94E04C26CB5DCF00FFA835 /* QuickSort.swift */; };
		4D94E05026CB6D5B00FFA835 /* BubbleSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D94E04F26CB6D5B00FFA835 /* BubbleSort.swift */; };
		4D94E05226CBA1FE00FFA835 /* 217. 存在重复元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D94E05126CBA1FE00FFA835 /* 217. 存在重复元素.swift */; };
		4D96A5B126BAC84D00606E34 /* 94. 二叉树的中序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D96A5B026BAC84D00606E34 /* 94. 二叉树的中序遍历.swift */; };
		4D96A5B326BC10AE00606E34 /* TreeNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D96A5B226BC10AE00606E34 /* TreeNode.swift */; };
		4D96A5B526BC118400606E34 /* 100. 相同的树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D96A5B426BC118400606E34 /* 100. 相同的树.swift */; };
		4D96A5B826BD71F400606E34 /* 112. 路径总和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D96A5B726BD71F400606E34 /* 112. 路径总和.swift */; };
		4D96A5BA26BEC92F00606E34 /* 125. 验证回文串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D96A5B926BEC92F00606E34 /* 125. 验证回文串.swift */; };
		4D96A5BC26BECED900606E34 /* 144. 二叉树的前序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D96A5BB26BECED900606E34 /* 144. 二叉树的前序遍历.swift */; };
		4D96A5BE26BED01C00606E34 /* 145. 二叉树的后序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D96A5BD26BED01C00606E34 /* 145. 二叉树的后序遍历.swift */; };
		4D9DD87A26C9605800DEDF59 /* 278. 第一个错误的版本.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D9DD87926C9605800DEDF59 /* 278. 第一个错误的版本.swift */; };
		4D9FB11F26D13EA900B332D2 /* 876. 链表的中间结点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4D9FB11E26D13EA900B332D2 /* 876. 链表的中间结点.swift */; };
		4DA08F9026C4059F002433AA /* 61. 旋转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA08F8F26C4059F002433AA /* 61. 旋转链表.swift */; };
		4DA08F9226C50BF7002433AA /* 最多的数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA08F9126C50BF7002433AA /* 最多的数.swift */; };
		4DA08F9426C50FB4002433AA /* 88. 合并两个有序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA08F9326C50FB4002433AA /* 88. 合并两个有序数组.swift */; };
		4DA34F1126C16C7D00C565CC /* 2. 两数相加.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA34F1026C16C7D00C565CC /* 2. 两数相加.swift */; };
		4DA34F1326C16CE000C565CC /* ListNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA34F1226C16CE000C565CC /* ListNode.swift */; };
		4DA34F1526C293B000C565CC /* 383. 赎金信.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA34F1426C293B000C565CC /* 383. 赎金信.swift */; };
		4DA34F1726C29F3A00C565CC /* 19. 删除链表的倒数第 N 个结点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA34F1626C29F3A00C565CC /* 19. 删除链表的倒数第 N 个结点.swift */; };
		4DA50C9326CD4D92002AC97F /* 98. 验证二叉搜索树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50C9226CD4D92002AC97F /* 98. 验证二叉搜索树.swift */; };
		4DA50C9526CD5F6E002AC97F /* 653. 两数之和 IV - 输入 BST.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50C9426CD5F6E002AC97F /* 653. 两数之和 IV - 输入 BST.swift */; };
		4DA50C9726CDF8DF002AC97F /* 235. 二叉搜索树的最近公共祖先.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50C9626CDF8DF002AC97F /* 235. 二叉搜索树的最近公共祖先.swift */; };
		4DA50C9926CE394F002AC97F /* 704. 二分查找.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50C9826CE394F002AC97F /* 704. 二分查找.swift */; };
		4DA50C9D26CE51D7002AC97F /* 189. 旋转数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50C9C26CE51D7002AC97F /* 189. 旋转数组.swift */; };
		4DA50C9F26CE5C70002AC97F /* 977. 有序数组的平方.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50C9E26CE5C70002AC97F /* 977. 有序数组的平方.swift */; };
		4DA50CA126CE87E9002AC97F /* 283. 移动零.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50CA026CE87E9002AC97F /* 283. 移动零.swift */; };
		4DA50CA326CE98EA002AC97F /* 169. 多数元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50CA226CE98EA002AC97F /* 169. 多数元素.swift */; };
		4DA50CA526CEA292002AC97F /* 167. 两数之和 II - 输入有序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50CA426CEA292002AC97F /* 167. 两数之和 II - 输入有序数组.swift */; };
		4DA50CA726CEAB32002AC97F /* 344. 反转字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50CA626CEAB32002AC97F /* 344. 反转字符串.swift */; };
		4DA50CA926CEAE33002AC97F /* 557. 反转字符串中的单词 III.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DA50CA826CEAE33002AC97F /* 557. 反转字符串中的单词 III.swift */; };
		4DD25DFC26AD2509008C2167 /* 53. 最大子序和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DD25DFB26AD2509008C2167 /* 53. 最大子序和.swift */; };
		4DD25DFE26B0F837008C2167 /* 26. 删除有序数组中的重复项.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DD25DFD26B0F837008C2167 /* 26. 删除有序数组中的重复项.swift */; };
		4DEBE9BF2751C7EB00512F34 /* 面试题 02.06. 回文链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DEBE9BE2751C7EB00512F34 /* 面试题 02.06. 回文链表.swift */; };
		4DEBE9C12751E49800512F34 /* 面试题 08.06. 汉诺塔问题.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DEBE9C02751E49800512F34 /* 面试题 08.06. 汉诺塔问题.swift */; };
		4DF0564F26C80EFC0051DE9F /* 206. 反转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DF0564E26C80EFC0051DE9F /* 206. 反转链表.swift */; };
		4DFDDA97274FDCE9005060F4 /* 3. 无重复字符的最长子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDA96274FDCE8005060F4 /* 3. 无重复字符的最长子串.swift */; };
		4DFDDA9A2750911F005060F4 /* 21. 合并两个有序链表.swift.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDA992750911F005060F4 /* 21. 合并两个有序链表.swift.swift */; };
		4DFDDA9C275096DF005060F4 /* 24. 两两交换链表中的节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDA9B275096DF005060F4 /* 24. 两两交换链表中的节点.swift */; };
		4DFDDA9E2750B2DC005060F4 /* 50. Pow(x, n).swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDA9D2750B2DC005060F4 /* 50. Pow(x, n).swift */; };
		4DFDDAA22750D242005060F4 /* 203. 移除链表元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDAA12750D242005060F4 /* 203. 移除链表元素.swift */; };
		4DFDDAA4275105E6005060F4 /* 231. 2 的幂.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDAA3275105E6005060F4 /* 231. 2 的幂.swift */; };
		4DFDDAA627510CBA005060F4 /* 326. 3的幂.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDAA527510CBA005060F4 /* 326. 3的幂.swift */; };
		4DFDDAA82751124C005060F4 /* 342. 4的幂.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDAA72751124C005060F4 /* 342. 4的幂.swift */; };
		4DFDDAAA27511474005060F4 /* 509. 斐波那契数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4DFDDAA927511474005060F4 /* 509. 斐波那契数.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		4D768F8E263931AE0016ABFF /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		4D1CAFBC2752441500A4D6FC /* 242. 有效的字母异位词.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "242. 有效的字母异位词.swift"; sourceTree = "<group>"; };
		4D1CAFBE2753365B00A4D6FC /* 268. 丢失的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "268. 丢失的数字.swift"; sourceTree = "<group>"; };
		4D1CAFC02753374300A4D6FC /* MergeSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MergeSort.swift; sourceTree = "<group>"; };
		4D27A29126B2661800BFA6B7 /* 27. 移除元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "27. 移除元素.swift"; sourceTree = "<group>"; };
		4D27A29426B27D8600BFA6B7 /* 35. 搜索插入位置.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "35. 搜索插入位置.swift"; sourceTree = "<group>"; };
		4D27A29726B2B94600BFA6B7 /* 58. 最后一个单词的长度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "58. 最后一个单词的长度.swift"; sourceTree = "<group>"; };
		4D27A29926B4476700BFA6B7 /* 67. 二进制求和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "67. 二进制求和.swift"; sourceTree = "<group>"; };
		4D5CAE54274FB87D00C4391B /* 1.两数之和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1.两数之和.swift"; sourceTree = "<group>"; };
		4D60658C266FBFD8005E3124 /* 1688. 比赛中的配对次数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1688. 比赛中的配对次数.swift"; sourceTree = "<group>"; };
		4D60658E266FC559005E3124 /* (未完)1863. 找出所有子集的异或总和再求和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "(未完)1863. 找出所有子集的异或总和再求和.swift"; sourceTree = "<group>"; };
		4D6065902675D639005E3124 /* (未完)17. 电话号码的字母组合.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "(未完)17. 电话号码的字母组合.swift"; sourceTree = "<group>"; };
		4D66674D275374CB00E4C576 /* 349. 两个数组的交集.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "349. 两个数组的交集.swift"; sourceTree = "<group>"; };
		4D66674F2753935400E4C576 /* 350. 两个数组的交集 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "350. 两个数组的交集 II.swift"; sourceTree = "<group>"; };
		4D6667512753952700E4C576 /* 389. 找不同.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "389. 找不同.swift"; sourceTree = "<group>"; };
		4D66675327539C3F00E4C576 /* 414. 第三大的数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "414. 第三大的数.swift"; sourceTree = "<group>"; };
		4D768F90263931AE0016ABFF /* LeetCode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = LeetCode; sourceTree = BUILT_PRODUCTS_DIR; };
		4D768F9F263932B70016ABFF /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = main.swift; path = ../main.swift; sourceTree = "<group>"; };
		4D768FA126393AFE0016ABFF /* 1143最长公共子序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1143最长公共子序列.swift"; sourceTree = "<group>"; };
		4D768FA32639A9CD0016ABFF /* 5. 最长回文子串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "5. 最长回文子串.swift"; sourceTree = "<group>"; };
		4D785B5826D5502100D66120 /* Turn.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Turn.swift; sourceTree = "<group>"; };
		4D80FE2E2751ED4000A0F62B /* 剑指 Offer 25. 合并两个排序的链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 25. 合并两个排序的链表.swift"; sourceTree = "<group>"; };
		4D80FE302751EFBF00A0F62B /* 剑指 Offer 06. 从尾到头打印链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 06. 从尾到头打印链表.swift"; sourceTree = "<group>"; };
		4D80FE342751F9D900A0F62B /* 剑指 Offer 24. 反转链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 24. 反转链表.swift"; sourceTree = "<group>"; };
		4D80FE362751FB2600A0F62B /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 62. 圆圈中最后剩下的数字.swift"; sourceTree = "<group>"; };
		4D94E04126CA7AA300FFA835 /* 347. 前 K 个高频元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "347. 前 K 个高频元素.swift"; sourceTree = "<group>"; };
		4D94E04626CA9E8E00FFA835 /* Stack.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Stack.swift; sourceTree = "<group>"; };
		4D94E04826CAA86700FFA835 /* 121. 买卖股票的最佳时机.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "121. 买卖股票的最佳时机.swift"; sourceTree = "<group>"; };
		4D94E04A26CABACE00FFA835 /* 70. 爬楼梯 .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "70. 爬楼梯 .swift"; sourceTree = "<group>"; };
		4D94E04C26CB5DCF00FFA835 /* QuickSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QuickSort.swift; sourceTree = "<group>"; };
		4D94E04F26CB6D5B00FFA835 /* BubbleSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BubbleSort.swift; sourceTree = "<group>"; };
		4D94E05126CBA1FE00FFA835 /* 217. 存在重复元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "217. 存在重复元素.swift"; sourceTree = "<group>"; };
		4D96A5B026BAC84D00606E34 /* 94. 二叉树的中序遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "94. 二叉树的中序遍历.swift"; sourceTree = "<group>"; };
		4D96A5B226BC10AE00606E34 /* TreeNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TreeNode.swift; sourceTree = "<group>"; };
		4D96A5B426BC118400606E34 /* 100. 相同的树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "100. 相同的树.swift"; sourceTree = "<group>"; };
		4D96A5B726BD71F400606E34 /* 112. 路径总和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "112. 路径总和.swift"; sourceTree = "<group>"; };
		4D96A5B926BEC92F00606E34 /* 125. 验证回文串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "125. 验证回文串.swift"; sourceTree = "<group>"; };
		4D96A5BB26BECED900606E34 /* 144. 二叉树的前序遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "144. 二叉树的前序遍历.swift"; sourceTree = "<group>"; };
		4D96A5BD26BED01C00606E34 /* 145. 二叉树的后序遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "145. 二叉树的后序遍历.swift"; sourceTree = "<group>"; };
		4D9DD87926C9605800DEDF59 /* 278. 第一个错误的版本.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "278. 第一个错误的版本.swift"; sourceTree = "<group>"; };
		4D9FB11E26D13EA900B332D2 /* 876. 链表的中间结点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "876. 链表的中间结点.swift"; sourceTree = "<group>"; };
		4DA08F8F26C4059F002433AA /* 61. 旋转链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "61. 旋转链表.swift"; sourceTree = "<group>"; };
		4DA08F9126C50BF7002433AA /* 最多的数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最多的数.swift"; sourceTree = "<group>"; };
		4DA08F9326C50FB4002433AA /* 88. 合并两个有序数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "88. 合并两个有序数组.swift"; sourceTree = "<group>"; };
		4DA34F1026C16C7D00C565CC /* 2. 两数相加.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "2. 两数相加.swift"; sourceTree = "<group>"; };
		4DA34F1226C16CE000C565CC /* ListNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListNode.swift; sourceTree = "<group>"; };
		4DA34F1426C293B000C565CC /* 383. 赎金信.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "383. 赎金信.swift"; sourceTree = "<group>"; };
		4DA34F1626C29F3A00C565CC /* 19. 删除链表的倒数第 N 个结点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "19. 删除链表的倒数第 N 个结点.swift"; sourceTree = "<group>"; };
		4DA50C9226CD4D92002AC97F /* 98. 验证二叉搜索树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "98. 验证二叉搜索树.swift"; sourceTree = "<group>"; };
		4DA50C9426CD5F6E002AC97F /* 653. 两数之和 IV - 输入 BST.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "653. 两数之和 IV - 输入 BST.swift"; sourceTree = "<group>"; };
		4DA50C9626CDF8DF002AC97F /* 235. 二叉搜索树的最近公共祖先.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "235. 二叉搜索树的最近公共祖先.swift"; sourceTree = "<group>"; };
		4DA50C9826CE394F002AC97F /* 704. 二分查找.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "704. 二分查找.swift"; sourceTree = "<group>"; };
		4DA50C9C26CE51D7002AC97F /* 189. 旋转数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "189. 旋转数组.swift"; sourceTree = "<group>"; };
		4DA50C9E26CE5C70002AC97F /* 977. 有序数组的平方.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "977. 有序数组的平方.swift"; sourceTree = "<group>"; };
		4DA50CA026CE87E9002AC97F /* 283. 移动零.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "283. 移动零.swift"; sourceTree = "<group>"; };
		4DA50CA226CE98EA002AC97F /* 169. 多数元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "169. 多数元素.swift"; sourceTree = "<group>"; };
		4DA50CA426CEA292002AC97F /* 167. 两数之和 II - 输入有序数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "167. 两数之和 II - 输入有序数组.swift"; sourceTree = "<group>"; };
		4DA50CA626CEAB32002AC97F /* 344. 反转字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "344. 反转字符串.swift"; sourceTree = "<group>"; };
		4DA50CA826CEAE33002AC97F /* 557. 反转字符串中的单词 III.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "557. 反转字符串中的单词 III.swift"; sourceTree = "<group>"; };
		4DD25DFB26AD2509008C2167 /* 53. 最大子序和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "53. 最大子序和.swift"; sourceTree = "<group>"; };
		4DD25DFD26B0F837008C2167 /* 26. 删除有序数组中的重复项.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "26. 删除有序数组中的重复项.swift"; sourceTree = "<group>"; };
		4DEBE9BE2751C7EB00512F34 /* 面试题 02.06. 回文链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "面试题 02.06. 回文链表.swift"; sourceTree = "<group>"; };
		4DEBE9C02751E49800512F34 /* 面试题 08.06. 汉诺塔问题.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "面试题 08.06. 汉诺塔问题.swift"; sourceTree = "<group>"; };
		4DF0564E26C80EFC0051DE9F /* 206. 反转链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "206. 反转链表.swift"; sourceTree = "<group>"; };
		4DFDDA96274FDCE8005060F4 /* 3. 无重复字符的最长子串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "3. 无重复字符的最长子串.swift"; sourceTree = "<group>"; };
		4DFDDA992750911F005060F4 /* 21. 合并两个有序链表.swift.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "21. 合并两个有序链表.swift.swift"; sourceTree = "<group>"; };
		4DFDDA9B275096DF005060F4 /* 24. 两两交换链表中的节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "24. 两两交换链表中的节点.swift"; sourceTree = "<group>"; };
		4DFDDA9D2750B2DC005060F4 /* 50. Pow(x, n).swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "50. Pow(x, n).swift"; sourceTree = "<group>"; };
		4DFDDAA12750D242005060F4 /* 203. 移除链表元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "203. 移除链表元素.swift"; sourceTree = "<group>"; };
		4DFDDAA3275105E6005060F4 /* 231. 2 的幂.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "231. 2 的幂.swift"; sourceTree = "<group>"; };
		4DFDDAA527510CBA005060F4 /* 326. 3的幂.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "326. 3的幂.swift"; sourceTree = "<group>"; };
		4DFDDAA72751124C005060F4 /* 342. 4的幂.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "342. 4的幂.swift"; sourceTree = "<group>"; };
		4DFDDAA927511474005060F4 /* 509. 斐波那契数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "509. 斐波那契数.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		4D768F8D263931AE0016ABFF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		4D27A28F26B24E0D00BFA6B7 /* 双指针遍历|滑动窗口 */ = {
			isa = PBXGroup;
			children = (
				4DFDDA96274FDCE8005060F4 /* 3. 无重复字符的最长子串.swift */,
				4DA34F1626C29F3A00C565CC /* 19. 删除链表的倒数第 N 个结点.swift */,
				4DD25DFD26B0F837008C2167 /* 26. 删除有序数组中的重复项.swift */,
				4D27A29126B2661800BFA6B7 /* 27. 移除元素.swift */,
				4DA08F9326C50FB4002433AA /* 88. 合并两个有序数组.swift */,
				4D96A5B926BEC92F00606E34 /* 125. 验证回文串.swift */,
				4DA50CA426CEA292002AC97F /* 167. 两数之和 II - 输入有序数组.swift */,
				4DA50C9C26CE51D7002AC97F /* 189. 旋转数组.swift */,
				4DA50CA026CE87E9002AC97F /* 283. 移动零.swift */,
				4DA50CA626CEAB32002AC97F /* 344. 反转字符串.swift */,
				4DA50CA826CEAE33002AC97F /* 557. 反转字符串中的单词 III.swift */,
				4D9FB11E26D13EA900B332D2 /* 876. 链表的中间结点.swift */,
				4DA50C9E26CE5C70002AC97F /* 977. 有序数组的平方.swift */,
			);
			path = "双指针遍历|滑动窗口";
			sourceTree = "<group>";
		};
		4D27A29026B24E6D00BFA6B7 /* 动态规划 */ = {
			isa = PBXGroup;
			children = (
				4D768FA32639A9CD0016ABFF /* 5. 最长回文子串.swift */,
				4DD25DFB26AD2509008C2167 /* 53. 最大子序和.swift */,
				4D94E04A26CABACE00FFA835 /* 70. 爬楼梯 .swift */,
				4D94E04826CAA86700FFA835 /* 121. 买卖股票的最佳时机.swift */,
				4D768FA126393AFE0016ABFF /* 1143最长公共子序列.swift */,
			);
			path = "动态规划";
			sourceTree = "<group>";
		};
		4D27A29326B27D7B00BFA6B7 /* 二分查找 */ = {
			isa = PBXGroup;
			children = (
				4D27A29426B27D8600BFA6B7 /* 35. 搜索插入位置.swift */,
				4D9DD87926C9605800DEDF59 /* 278. 第一个错误的版本.swift */,
				4DA50C9826CE394F002AC97F /* 704. 二分查找.swift */,
			);
			path = "二分查找";
			sourceTree = "<group>";
		};
		4D768F87263931AE0016ABFF = {
			isa = PBXGroup;
			children = (
				4D768F92263931AE0016ABFF /* LeetCode */,
				4D768F91263931AE0016ABFF /* Products */,
			);
			sourceTree = "<group>";
		};
		4D768F91263931AE0016ABFF /* Products */ = {
			isa = PBXGroup;
			children = (
				4D768F90263931AE0016ABFF /* LeetCode */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		4D768F92263931AE0016ABFF /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				4D94E05426CBA36400FFA835 /* 数组 */,
				4D94E04026CA7A9900FFA835 /* 排序 */,
				4D94E03F26CA721500FFA835 /* util */,
				4DA1E11426C16AF5000E04BF /* 链表 */,
				4D96A5B626BC198B00606E34 /* 二叉树 */,
				4D27A29326B27D7B00BFA6B7 /* 二分查找 */,
				4DFDDA98275090C9005060F4 /* 递归 */,
				4D27A29026B24E6D00BFA6B7 /* 动态规划 */,
				4D27A28F26B24E0D00BFA6B7 /* 双指针遍历|滑动窗口 */,
				4D768F9F263932B70016ABFF /* main.swift */,
				4D60658C266FBFD8005E3124 /* 1688. 比赛中的配对次数.swift */,
				4D60658E266FC559005E3124 /* (未完)1863. 找出所有子集的异或总和再求和.swift */,
				4D6065902675D639005E3124 /* (未完)17. 电话号码的字母组合.swift */,
				4D27A29726B2B94600BFA6B7 /* 58. 最后一个单词的长度.swift */,
				4D27A29926B4476700BFA6B7 /* 67. 二进制求和.swift */,
				4DA34F1426C293B000C565CC /* 383. 赎金信.swift */,
				4DA08F9126C50BF7002433AA /* 最多的数.swift */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
		4D94E03F26CA721500FFA835 /* util */ = {
			isa = PBXGroup;
			children = (
				4D94E04E26CB6D4300FFA835 /* 排序 */,
				4D96A5B226BC10AE00606E34 /* TreeNode.swift */,
				4DA34F1226C16CE000C565CC /* ListNode.swift */,
				4D94E04626CA9E8E00FFA835 /* Stack.swift */,
			);
			path = util;
			sourceTree = "<group>";
		};
		4D94E04026CA7A9900FFA835 /* 排序 */ = {
			isa = PBXGroup;
			children = (
				4D1CAFBC2752441500A4D6FC /* 242. 有效的字母异位词.swift */,
				4D94E04126CA7AA300FFA835 /* 347. 前 K 个高频元素.swift */,
				4D6667512753952700E4C576 /* 389. 找不同.swift */,
				4D66675327539C3F00E4C576 /* 414. 第三大的数.swift */,
			);
			path = "排序";
			sourceTree = "<group>";
		};
		4D94E04E26CB6D4300FFA835 /* 排序 */ = {
			isa = PBXGroup;
			children = (
				4D94E04F26CB6D5B00FFA835 /* BubbleSort.swift */,
				4D94E04C26CB5DCF00FFA835 /* QuickSort.swift */,
				4D1CAFC02753374300A4D6FC /* MergeSort.swift */,
			);
			path = "排序";
			sourceTree = "<group>";
		};
		4D94E05426CBA36400FFA835 /* 数组 */ = {
			isa = PBXGroup;
			children = (
				4D785B5826D5502100D66120 /* Turn.swift */,
				4D5CAE54274FB87D00C4391B /* 1.两数之和.swift */,
				4DA50CA226CE98EA002AC97F /* 169. 多数元素.swift */,
				4D94E05126CBA1FE00FFA835 /* 217. 存在重复元素.swift */,
				4D1CAFBE2753365B00A4D6FC /* 268. 丢失的数字.swift */,
				4D66674D275374CB00E4C576 /* 349. 两个数组的交集.swift */,
				4D66674F2753935400E4C576 /* 350. 两个数组的交集 II.swift */,
			);
			path = "数组";
			sourceTree = "<group>";
		};
		4D96A5B626BC198B00606E34 /* 二叉树 */ = {
			isa = PBXGroup;
			children = (
				4D96A5B026BAC84D00606E34 /* 94. 二叉树的中序遍历.swift */,
				4DA50C9226CD4D92002AC97F /* 98. 验证二叉搜索树.swift */,
				4D96A5B426BC118400606E34 /* 100. 相同的树.swift */,
				4D96A5B726BD71F400606E34 /* 112. 路径总和.swift */,
				4D96A5BB26BECED900606E34 /* 144. 二叉树的前序遍历.swift */,
				4D96A5BD26BED01C00606E34 /* 145. 二叉树的后序遍历.swift */,
				4DA50C9626CDF8DF002AC97F /* 235. 二叉搜索树的最近公共祖先.swift */,
				4DA50C9426CD5F6E002AC97F /* 653. 两数之和 IV - 输入 BST.swift */,
			);
			path = "二叉树";
			sourceTree = "<group>";
		};
		4DA1E11426C16AF5000E04BF /* 链表 */ = {
			isa = PBXGroup;
			children = (
				4DA34F1026C16C7D00C565CC /* 2. 两数相加.swift */,
				4DFDDA992750911F005060F4 /* 21. 合并两个有序链表.swift.swift */,
				4DFDDA9B275096DF005060F4 /* 24. 两两交换链表中的节点.swift */,
				4DFDDA9D2750B2DC005060F4 /* 50. Pow(x, n).swift */,
				4DA08F8F26C4059F002433AA /* 61. 旋转链表.swift */,
				4DFDDAA12750D242005060F4 /* 203. 移除链表元素.swift */,
				4DF0564E26C80EFC0051DE9F /* 206. 反转链表.swift */,
				4DEBE9BE2751C7EB00512F34 /* 面试题 02.06. 回文链表.swift */,
				4D80FE302751EFBF00A0F62B /* 剑指 Offer 06. 从尾到头打印链表.swift */,
				4D80FE342751F9D900A0F62B /* 剑指 Offer 24. 反转链表.swift */,
				4D80FE2E2751ED4000A0F62B /* 剑指 Offer 25. 合并两个排序的链表.swift */,
				4D80FE362751FB2600A0F62B /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift */,
			);
			path = "链表";
			sourceTree = "<group>";
		};
		4DFDDA98275090C9005060F4 /* 递归 */ = {
			isa = PBXGroup;
			children = (
				4DFDDAA3275105E6005060F4 /* 231. 2 的幂.swift */,
				4DFDDAA527510CBA005060F4 /* 326. 3的幂.swift */,
				4DFDDAA72751124C005060F4 /* 342. 4的幂.swift */,
				4DFDDAA927511474005060F4 /* 509. 斐波那契数.swift */,
				4DEBE9C02751E49800512F34 /* 面试题 08.06. 汉诺塔问题.swift */,
			);
			path = "递归";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		4D768F8F263931AE0016ABFF /* LeetCode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4D768F97263931AE0016ABFF /* Build configuration list for PBXNativeTarget "LeetCode" */;
			buildPhases = (
				4D768F8C263931AE0016ABFF /* Sources */,
				4D768F8D263931AE0016ABFF /* Frameworks */,
				4D768F8E263931AE0016ABFF /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LeetCode;
			productName = LeetCode;
			productReference = 4D768F90263931AE0016ABFF /* LeetCode */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		4D768F88263931AE0016ABFF /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1250;
				LastUpgradeCheck = 1310;
				TargetAttributes = {
					4D768F8F263931AE0016ABFF = {
						CreatedOnToolsVersion = 12.5;
						LastSwiftMigration = 1250;
					};
				};
			};
			buildConfigurationList = 4D768F8B263931AE0016ABFF /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 4D768F87263931AE0016ABFF;
			productRefGroup = 4D768F91263931AE0016ABFF /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				4D768F8F263931AE0016ABFF /* LeetCode */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		4D768F8C263931AE0016ABFF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4D80FE372751FB2600A0F62B /* 剑指 Offer 62. 圆圈中最后剩下的数字.swift in Sources */,
				4DA50C9926CE394F002AC97F /* 704. 二分查找.swift in Sources */,
				4DFDDAAA27511474005060F4 /* 509. 斐波那契数.swift in Sources */,
				4D6065912675D639005E3124 /* (未完)17. 电话号码的字母组合.swift in Sources */,
				4D80FE2F2751ED4000A0F62B /* 剑指 Offer 25. 合并两个排序的链表.swift in Sources */,
				4DA50C9726CDF8DF002AC97F /* 235. 二叉搜索树的最近公共祖先.swift in Sources */,
				4D5CAE55274FB87D00C4391B /* 1.两数之和.swift in Sources */,
				4DD25DFC26AD2509008C2167 /* 53. 最大子序和.swift in Sources */,
				4DA08F9426C50FB4002433AA /* 88. 合并两个有序数组.swift in Sources */,
				4DFDDA9A2750911F005060F4 /* 21. 合并两个有序链表.swift.swift in Sources */,
				4D1CAFC12753374300A4D6FC /* MergeSort.swift in Sources */,
				4DFDDA9C275096DF005060F4 /* 24. 两两交换链表中的节点.swift in Sources */,
				4D96A5B526BC118400606E34 /* 100. 相同的树.swift in Sources */,
				4DFDDAA22750D242005060F4 /* 203. 移除链表元素.swift in Sources */,
				4DA50C9526CD5F6E002AC97F /* 653. 两数之和 IV - 输入 BST.swift in Sources */,
				4D9FB11F26D13EA900B332D2 /* 876. 链表的中间结点.swift in Sources */,
				4D27A29226B2661800BFA6B7 /* 27. 移除元素.swift in Sources */,
				4D66675427539C3F00E4C576 /* 414. 第三大的数.swift in Sources */,
				4DA34F1526C293B000C565CC /* 383. 赎金信.swift in Sources */,
				4DEBE9C12751E49800512F34 /* 面试题 08.06. 汉诺塔问题.swift in Sources */,
				4DA50CA126CE87E9002AC97F /* 283. 移动零.swift in Sources */,
				4DA34F1726C29F3A00C565CC /* 19. 删除链表的倒数第 N 个结点.swift in Sources */,
				4D768FA42639A9CD0016ABFF /* 5. 最长回文子串.swift in Sources */,
				4DA08F9226C50BF7002433AA /* 最多的数.swift in Sources */,
				4D94E05226CBA1FE00FFA835 /* 217. 存在重复元素.swift in Sources */,
				4D1CAFBF2753365B00A4D6FC /* 268. 丢失的数字.swift in Sources */,
				4D96A5B826BD71F400606E34 /* 112. 路径总和.swift in Sources */,
				4DD25DFE26B0F837008C2167 /* 26. 删除有序数组中的重复项.swift in Sources */,
				4D768FA0263932B70016ABFF /* main.swift in Sources */,
				4D94E05026CB6D5B00FFA835 /* BubbleSort.swift in Sources */,
				4DA50CA726CEAB32002AC97F /* 344. 反转字符串.swift in Sources */,
				4D27A29A26B4476700BFA6B7 /* 67. 二进制求和.swift in Sources */,
				4D94E04226CA7AA300FFA835 /* 347. 前 K 个高频元素.swift in Sources */,
				4D6667502753935400E4C576 /* 350. 两个数组的交集 II.swift in Sources */,
				4DA50C9F26CE5C70002AC97F /* 977. 有序数组的平方.swift in Sources */,
				4DA34F1126C16C7D00C565CC /* 2. 两数相加.swift in Sources */,
				4DA50C9D26CE51D7002AC97F /* 189. 旋转数组.swift in Sources */,
				4D27A29526B27D8600BFA6B7 /* 35. 搜索插入位置.swift in Sources */,
				4DFDDA9E2750B2DC005060F4 /* 50. Pow(x, n).swift in Sources */,
				4D96A5B326BC10AE00606E34 /* TreeNode.swift in Sources */,
				4D60658F266FC559005E3124 /* (未完)1863. 找出所有子集的异或总和再求和.swift in Sources */,
				4D66674E275374CB00E4C576 /* 349. 两个数组的交集.swift in Sources */,
				4DA50C9326CD4D92002AC97F /* 98. 验证二叉搜索树.swift in Sources */,
				4DFDDAA82751124C005060F4 /* 342. 4的幂.swift in Sources */,
				4DFDDA97274FDCE9005060F4 /* 3. 无重复字符的最长子串.swift in Sources */,
				4DEBE9BF2751C7EB00512F34 /* 面试题 02.06. 回文链表.swift in Sources */,
				4DFDDAA627510CBA005060F4 /* 326. 3的幂.swift in Sources */,
				4DA50CA526CEA292002AC97F /* 167. 两数之和 II - 输入有序数组.swift in Sources */,
				4D96A5BE26BED01C00606E34 /* 145. 二叉树的后序遍历.swift in Sources */,
				4D96A5B126BAC84D00606E34 /* 94. 二叉树的中序遍历.swift in Sources */,
				4DF0564F26C80EFC0051DE9F /* 206. 反转链表.swift in Sources */,
				4D96A5BC26BECED900606E34 /* 144. 二叉树的前序遍历.swift in Sources */,
				4D96A5BA26BEC92F00606E34 /* 125. 验证回文串.swift in Sources */,
				4DA50CA326CE98EA002AC97F /* 169. 多数元素.swift in Sources */,
				4D94E04926CAA86700FFA835 /* 121. 买卖股票的最佳时机.swift in Sources */,
				4DA08F9026C4059F002433AA /* 61. 旋转链表.swift in Sources */,
				4D27A29826B2B94600BFA6B7 /* 58. 最后一个单词的长度.swift in Sources */,
				4D9DD87A26C9605800DEDF59 /* 278. 第一个错误的版本.swift in Sources */,
				4D80FE352751F9D900A0F62B /* 剑指 Offer 24. 反转链表.swift in Sources */,
				4D94E04B26CABACE00FFA835 /* 70. 爬楼梯 .swift in Sources */,
				4DA50CA926CEAE33002AC97F /* 557. 反转字符串中的单词 III.swift in Sources */,
				4D94E04726CA9E8E00FFA835 /* Stack.swift in Sources */,
				4D80FE312751EFBF00A0F62B /* 剑指 Offer 06. 从尾到头打印链表.swift in Sources */,
				4D6667522753952700E4C576 /* 389. 找不同.swift in Sources */,
				4D768FA226393AFE0016ABFF /* 1143最长公共子序列.swift in Sources */,
				4DFDDAA4275105E6005060F4 /* 231. 2 的幂.swift in Sources */,
				4D94E04D26CB5DCF00FFA835 /* QuickSort.swift in Sources */,
				4D60658D266FBFD8005E3124 /* 1688. 比赛中的配对次数.swift in Sources */,
				4DA34F1326C16CE000C565CC /* ListNode.swift in Sources */,
				4D1CAFBD2752441500A4D6FC /* 242. 有效的字母异位词.swift in Sources */,
				4D785B5926D5502100D66120 /* Turn.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		4D768F95263931AE0016ABFF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 11.3;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		4D768F96263931AE0016ABFF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 11.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		4D768F98263931AE0016ABFF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 4NYH5TAP73;
				ENABLE_HARDENED_RUNTIME = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/../Frameworks",
				);
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "LeetCode/LeetCode-Bridging-Header.h";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		4D768F99263931AE0016ABFF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 4NYH5TAP73;
				ENABLE_HARDENED_RUNTIME = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/../Frameworks",
				);
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "LeetCode/LeetCode-Bridging-Header.h";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		4D768F8B263931AE0016ABFF /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4D768F95263931AE0016ABFF /* Debug */,
				4D768F96263931AE0016ABFF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		4D768F97263931AE0016ABFF /* Build configuration list for PBXNativeTarget "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4D768F98263931AE0016ABFF /* Debug */,
				4D768F99263931AE0016ABFF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 4D768F88263931AE0016ABFF /* Project object */;
}
